{
  "hash": "a9900ae6705382817619202b94295d2b",
  "result": {
    "markdown": "---\ntitle: \"Codes\"\n---\n\n\n#### **Research Question 1:**\n\nDo certain demographic groups have a higher or lower likelihood of defaulting on credit card payments, and can this be predicted using regression models?\n\nCode:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(readr)  # For data reading\nlibrary(dplyr)  # For data manipulation\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)  # For data visualization\nlibrary(caret)  # For machine learning models\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\n# Read the dataset\ncredit_data <- read.csv(\"C:/Users/chpra/OneDrive/Documents/MS/STAT-515/Finalprojectreport/Final_output.csv\")\n\n# 1. Preprocess the data\n# Convert categorical variables to factors\ncredit_data$Gender <- as.factor(credit_data$Gender)\ncredit_data$Education <- as.factor(credit_data$Education)\ncredit_data$Marriage <- as.factor(credit_data$Marriage)\ncredit_data$default_payment_next_month <- as.factor(credit_data$default_payment_next_month)\n\n# Check for missing values\nsum(is.na(credit_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# 2. Explore the data\n# Visualize default payments across different demographic groups\nplot1 = ggplot(credit_data, aes(x = default_payment_next_month, fill = Gender)) +\n  geom_bar() +\n  facet_wrap(~ Education + Marriage, scales = \"free\") +\n  labs(title = \"Default Payments by Gender, Education, and Marriage Status\")\nplot1\n```\n\n::: {.cell-output-display}\n![](Codes_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 3. Train regression models\n# Split the data into training and testing sets\nset.seed(123)  # For reproducibility\ntrain_index <- createDataPartition(credit_data$default_payment_next_month, p = 0.7, list = FALSE)\ntrain_data <- credit_data[train_index, ]\ntest_data <- credit_data[-train_index, ]\n\n# Train logistic regression model\nlogit_model <- glm(default_payment_next_month ~ ., data = train_data, family = binomial)\n\n# 4. Evaluate model performance\n# Make predictions on the test set\npredictions <- predict(logit_model, newdata = test_data, type = \"response\")\npredicted_classes <- ifelse(predictions > 0.5, \"Default\", \"Not Default\")\n\n# Confusion matrix\nconfusionMatrix(table(predicted_classes, test_data$default_payment_next_month))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n                 \npredicted_classes Default Not Default\n      Default        1508        6795\n      Not Default     482         214\n                                          \n               Accuracy : 0.1914          \n                 95% CI : (0.1833, 0.1996)\n    No Information Rate : 0.7789          \n    P-Value [Acc > NIR] : 1               \n                                          \n                  Kappa : -0.0991         \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.75779         \n            Specificity : 0.03053         \n         Pos Pred Value : 0.18162         \n         Neg Pred Value : 0.30747         \n             Prevalence : 0.22114         \n         Detection Rate : 0.16757         \n   Detection Prevalence : 0.92266         \n      Balanced Accuracy : 0.39416         \n                                          \n       'Positive' Class : Default         \n                                          \n```\n:::\n:::\n\n\n#### **Research Question 2:**\n\nWhich features are deemed most important in predicting credit default risk?\n\nCode:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"C:/Users/chpra/OneDrive/Documents/MS/STAT-515/Finalprojectreport/Final_output.csv\")\n\ndata$Gender<- factor(data$Gender)\ndata$Education <- factor(data$Education)\ndata$Marriage <- factor(data$Marriage)\ndata$Repay_Sept <- factor(data$Repay_Sept)\ndata$Repay_Aug <- factor(data$Repay_Aug)\ndata$Repay_Jul <- factor(data$Repay_Jul)\ndata$Repay_Jun <- factor(data$Repay_Jun)\ndata$Repay_May <- factor(data$Repay_May)\ndata$Repay_Apr <- factor(data$Repay_Apr)\ndata$default_payment_next_month <- factor(data$default_payment_next_month)\n\n# Load required libraries\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForest' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'randomForest'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n:::\n\n```{.r .cell-code}\n# Set seed for reproducibility\nset.seed(1234)\n\n# Train the Random Forest model\nrf_model <- randomForest(default_payment_next_month ~ ., data = data)\n\n# Get variable importance measures\nimportance <- importance(rf_model)\n\n# Sort variable importance measures by importance\nvar_importance <- importance[order(-importance[, 1]), ]\n\n# Display variable importance measures\nprint(var_importance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Repay_Sept           ID Billpay_Sept          Age  Billpay_Aug Amtpaid_Sept \n  1018.32726    672.52568    563.75433    534.11658    512.46432    493.17382 \n Billpay_Jul  Limited_Bal  Billpay_Jun  Billpay_Apr  Billpay_May  Amtpaid_Aug \n   491.20440    490.99607    478.71140    476.84633    469.35011    455.75366 \n Amtpaid_Jul  Amtpaid_Apr  Amtpaid_May  Amtpaid_Jun    Repay_Aug    Repay_Jul \n   436.19727    433.73568    417.53178    413.28457    410.82039    291.82828 \n   Repay_Jun    Repay_May    Repay_Apr    Education     Marriage       Gender \n   234.61829    214.68302    210.96277    184.38949    109.52670     88.19018 \n```\n:::\n:::\n\n\nThe output shows the importance of different variables in predicting credit default risk. Repayment behavior in previous months, represented by variables like Repay_Sept, has the highest importance, indicating its strong influence on predicting default. Billing and payment amounts also contribute to prediction but to a lesser extent. Demographic variables like Age have some importance, while Customer ID has limited predictive power. Overall, understanding these factors helps in assessing credit risk and making informed decisions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(importance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n num [1:24, 1] 672.5 491 88.2 184.4 109.5 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:24] \"ID\" \"Limited_Bal\" \"Gender\" \"Education\" ...\n  ..$ : chr \"MeanDecreaseGini\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract the values of MeanDecreaseGini\nimportance_values <- as.numeric(importance[, 1])\n\n# Sort feature importance values in descending order\nimportance_values_sorted <- sort(importance_values, decreasing = TRUE)\n\n# Get corresponding feature names\nfeature_names <- rownames(importance)[order(importance_values, decreasing = TRUE)]\n\n# Plot feature importance\nbarplot(importance_values_sorted, \n        main = \"Feature Importance in Predicting Credit Default Risk\",\n        xlab = \"Features\",\n        ylab = \"Mean Decrease in Gini Index\",\n        cex.names = 0.8,\n        las = 2,  # Rotate labels vertically\n        col = \"skyblue\",\n        ylim = c(0, max(importance_values_sorted) * 1.1),\n        names.arg = feature_names,\n        args.legend = list(x = \"topright\"),  # Adjust x-axis label position\n        mar = c(10, 10, 14, 12))  # Adjust margin (bottom margin increased)\n```\n\n::: {.cell-output-display}\n![](Codes_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### **Research Question 3:**\n\nIdentify the distinct patterns of credit limit utilization among users.\n\nCode:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(cluster)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'cluster' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n# Load the dataset\ncredit_data <- read.csv(\"C:/Users/chpra/OneDrive/Documents/MS/STAT-515/Finalprojectreport/Final_output.csv\")\n\n# Step 2: Select relevant columns for clustering\ndata_for_clustering <- credit_data[, c(\"Limited_Bal\", \"Repay_Apr\", \"Repay_May\", \"Repay_Jun\", \"Repay_Jul\", \"Repay_Aug\", \"Repay_Sept\")]\n\n# Step 3: Standardize the data\nscaled_data <- scale(data_for_clustering)\n\n# Step 4: Determine optimal number of clusters using elbow method\nwss <- (nrow(scaled_data)-1) * sum(apply(scaled_data, 2, var))\nfor (i in 2:15) wss[i] <- sum(kmeans(scaled_data, centers=i)$withinss)\nplot(1:15, wss, type=\"b\", xlab=\"Number of Clusters\", ylab=\"Within groups sum of squares\")\n```\n\n::: {.cell-output-display}\n![](Codes_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Step 5: Based on the elbow plot, select the number of clusters (e.g., 3)\nnum_clusters <- 3\n\n# Step 6: Perform K-means clustering\nkmeans_result <- kmeans(scaled_data, centers=num_clusters)\n\n# Step 7: Assign cluster labels to each user\ncluster_labels <- kmeans_result$cluster\n\n# Step 8: Add cluster labels to the original dataset\ncredit_data_with_clusters <- cbind(credit_data, cluster = cluster_labels)\n\n# Step 9: Get the cluster centers\ncluster_centers <- kmeans_result$centers\n\n# Step 10: Calculate standard deviations across columns\ncol_std_dev <- apply(data_for_clustering, 2, sd)\n\n# Step 11: Scale the cluster centers by dividing by standard deviations\ncluster_centers <- scale(cluster_centers, center = FALSE, scale = col_std_dev)\n\n# Step 12: Assign column names to cluster_centers\ncolnames(cluster_centers) <- colnames(data_for_clustering)\n\n# Step 13: View cluster centers\nprint(cluster_centers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Limited_Bal  Repay_Apr  Repay_May  Repay_Jun  Repay_Jul  Repay_Aug\n1 -4.699941e-06  1.2499464  1.4093804  1.4227930  1.4360907  1.4124949\n2  3.644460e-06 -0.8264215 -0.8801255 -0.8758454 -0.8553181 -0.8132726\n3 -9.206548e-07  0.1728956  0.1688987  0.1641300  0.1511985  0.1346120\n   Repay_Sept\n1  1.28978602\n2 -0.66272483\n3  0.08266683\nattr(,\"scaled:scale\")\n Limited_Bal    Repay_Apr    Repay_May    Repay_Jun    Repay_Jul    Repay_Aug \n1.297477e+05 1.149988e+00 1.133187e+00 1.169139e+00 1.196868e+00 1.197186e+00 \n  Repay_Sept \n1.123802e+00 \n```\n:::\n\n```{.r .cell-code}\n# Visualization (Optional):\n# Plot clusters based on the first two principal components\npca_data <- prcomp(scaled_data, center = TRUE, scale. = TRUE)\nplot(pca_data$x[, 1], pca_data$x[, 2], col = cluster_labels, pch = 20, main = \"Clusters based on Credit Utilization Patterns\", xlab = \"Principal Component 1\", ylab = \"Principal Component 2\")\nlegend(\"topright\", legend = unique(cluster_labels), col = unique(cluster_labels), pch = 20, title = \"Cluster\")\n```\n\n::: {.cell-output-display}\n![](Codes_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Codes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}